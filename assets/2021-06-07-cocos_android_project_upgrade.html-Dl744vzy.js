import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,d as n,a,b as i,e as r,w as d,r as t,o}from"./app-CQ2TP62M.js";const c={};function h(u,s){const e=t("RouteLink");return o(),p("div",null,[s[3]||(s[3]=n(`<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h2><p>这里主要是介绍如果把 Cocos Creator 的 Andorid 导出工程的编译配置升级.</p><h2 id="为什么" tabindex="-1"><a class="header-anchor" href="#为什么"><span>为什么</span></a></h2><p>为什么要升级了, 默认导出不能用吗, 肯定是可以用的. 但是当你想在导出工程上集成一些第三方插件时, 它们必须要 android build tool 多少版本以上, 工程中必须要用 enable androidx, 那就必须要升级工程配置了.</p><h2 id="升级步骤" tabindex="-1"><a class="header-anchor" href="#升级步骤"><span>升级步骤</span></a></h2><p>以下以 Cocos Creator 2.4.5 的导出工程为准来依次给出步骤与方法.</p><ul><li>Cocos Creator 2.x 其它版本其实是差不多的, 基本可以直接套用</li><li>Cocos Creator 3.x 的导出工程结构有一个定的变化, 但是以下步骤中的文件内容都是有的, 只是路径不太一样, 实际修改不会变.</li></ul><p>在以下的步骤中, 我会列出要修改的文件, 修改文件的内容, 在其中带 <code>为升级作的修改</code> 标识的行就是为升级而作的修改, 其它行是为了好定位修改行的位置或附带的帮助开发的作用(比如 aliyun 镜像这样的标志).</p><h3 id="android-tool-build" tabindex="-1"><a class="header-anchor" href="#android-tool-build"><span>Android tool build</span></a></h3><p>路径: proj.android-studio/build.gradle</p><p>修改: 将 android tools build 版本修改为 4.1.1</p><div class="language-gradle line-numbers-mode" data-highlighter="shiki" data-ext="gradle" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-gradle"><span class="line"><span>buildscript {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    repositories {</span></span>
<span class="line"><span>        maven { url &#39;https://maven.aliyun.com/repository/public/&#39; }   // 使用 ailun 镜像</span></span>
<span class="line"><span>        maven { url &#39;https://maven.aliyun.com/repository/google/&#39; }  // 使用 ailun 镜像</span></span>
<span class="line"><span>        maven { url &#39;https://maven.aliyun.com/repository/gradle-plugin/&#39; }  // 使用 ailun 镜像</span></span>
<span class="line"><span>        google()</span></span>
<span class="line"><span>        jcenter()</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    dependencies {</span></span>
<span class="line"><span>        classpath &#39;com.android.tools.build:gradle:4.1.1&#39;  // 为升级作的修改</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>allprojects {</span></span>
<span class="line"><span>    repositories {</span></span>
<span class="line"><span>        maven { url &#39;https://maven.aliyun.com/repository/public/&#39; }         // 使用 ailun 镜像</span></span>
<span class="line"><span>        maven { url &#39;https://maven.aliyun.com/repository/google/&#39; }         // 使用 ailun 镜像</span></span>
<span class="line"><span>        maven { url &#39;https://maven.aliyun.com/repository/gradle-plugin/&#39; }  // 使用 ailun 镜像</span></span>
<span class="line"><span>        google()</span></span>
<span class="line"><span>        jcenter()</span></span>
<span class="line"><span>        flatDir {</span></span>
<span class="line"><span>            dirs &#39;libs&#39;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="gradle-wrapper" tabindex="-1"><a class="header-anchor" href="#gradle-wrapper"><span>Gradle Wrapper</span></a></h3><p>基本这里的版本是要匹配上一步中的 android tool build 的, 如果你在 Android Studio 中的话, 就会提示你 gradel-wrapper 中的版本不对,需要升级.</p><p>路径: <code>proj.android-studio/gradle/wrapper/gradle-wrapper.properties</code></p><p>修改: 将 gradle 版本修改为 6.5</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-properties"><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">distributionBase</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">GRADLE_USER_HOME</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">distributionPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">wrapper/dists</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">zipStoreBase</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">GRADLE_USER_HOME</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">zipStorePath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">wrapper/dists</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">distributionUrl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">https\\://services.gradle.org/distributions/gradle-6.5-bin.zip </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 为升级作的修改</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="gradle-settings" tabindex="-1"><a class="header-anchor" href="#gradle-settings"><span>Gradle Settings</span></a></h3><p>在 Cocos Creator 中导出的 Android Studio 工程其实有两个 Target , 一个是 Instantapp , 一个是你的工程名.<br> instantapp 是 google 推出的一种叫免安装打包方式, 对包体是有大小限制的<br> 另一个就是我们平常打包 apk 最常用到的.</p><p>这里我会把 instantapp 去掉, 一般很少打这个原生包.</p><p>路径: <code>proj.android-studio/settings.gradle</code></p><p>修改: 去掉 <code>,&#39;:game&#39;, &#39;:instantapp&#39;</code></p><div class="language-gradle line-numbers-mode" data-highlighter="shiki" data-ext="gradle" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-gradle"><span class="line"><span>include &#39;:libcocos2dx&#39;  // 为升级作的修改</span></span>
<span class="line"><span>project(&#39;:libcocos2dx&#39;).projectDir = new File(&#39;/Applications/CocosCreator/Creator/2.4.5/CocosCreator.app/Contents/Resources/cocos2d-x/cocos/platform/android/libcocos2dx&#39;)</span></span>
<span class="line"><span>include &#39;:creatorTest&#39;</span></span>
<span class="line"><span>project(&#39;:creatorTest&#39;).projectDir = new File(settingsDir, &#39;app&#39;)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="gradle-properties" tabindex="-1"><a class="header-anchor" href="#gradle-properties"><span>Gradle Properties</span></a></h3><p>一般是在这个文件里定义一些可变的配置项, 这样修改的地方都是在这个文件里, 其它具体引用直接引用这个文件里的变量名就要以了.</p><p>这里的修改应该是确保 PROP_COMPILE_SDK_VERSION, PROP_TARGET_SDK_VERSION, PROP_BUILD_TOOLS_VERSION 使用的是同一个 api.</p><p>一般情况下 PROP_COMPILE_SDK_VERSION, PROP_TARGET_SDK_VERSION, PROP_BUILD_TOOLS_VERSION 应该用最新的版本. google store 也会不断地要求上架的 apk , target sdk 必须支持对应多少版本.</p>`,27)),a("p",null,[s[1]||(s[1]=i("PROP_MIN_SDK_VERSION 是最低兼容 android api, 根据你的情况来定了.")),s[2]||(s[2]=a("br",null,null,-1)),r(e,{to:"/posts/2021-01-20-androidapilevels.html"},{default:d(()=>s[0]||(s[0]=[i("Android Level API")])),_:1,__:[0]})]),s[4]||(s[4]=n(`<p>以下的修改中, 还加了 android.useAndroidX=true, 这一项, 如果你只是升级 Android 工程, 应该不需要这一项, 但是很多第三方 sdk 都开始依赖 androidx 了, 所以很多时候都会需要这一项.</p><p>路径: <code>proj.android-studio/gradle.properties</code></p><p>修改: 修改 PROP_COMPILE_SDK_VERSION, PROP_MIN_SDK_VERSION, PROP_TARGET_SDK_VERSION, PROP_BUILD_TOOLS_VERSION 的值</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-properties"><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">PROP_COMPILE_SDK_VERSION</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">30     // 为升级作的修改</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Android SDK version that will be used as the earliest version of android this application can run on</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">PROP_MIN_SDK_VERSION</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">16         // 为升级作的修改</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Android SDK version that will be used as the latest version of android this application has been tested on</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">PROP_TARGET_SDK_VERSION</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">30      // 为升级作的修改</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Android Build Tools version that will be used as the compile project</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">PROP_BUILD_TOOLS_VERSION</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">30.0.2 // 为升级作的修改</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">android.useAndroidX</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="app-build-gradle" tabindex="-1"><a class="header-anchor" href="#app-build-gradle"><span>App Build Gradle</span></a></h3><p>这里最主要的核心点就是确定 outputDir 所在的位置, outputDir 的位置在不同的 gradle 版本中位置是不一样的.<br> outputDir gradle 打包 apk 的临时路径, 我们这里所做的事就是在开始打包 apk 之前, 把工程中的 assets 相关的资源拷贝到 gradle 中正确的位置上去. 以下是一个对于 2.4.5 的参考, 其它版本根据其它的思想来做对应的修改.</p><p>路径: <code>build/jsb-link/frameworks/runtime-src/proj.android-studio/app/build.gradle</code></p><p>修改: 最核心的点就是修改 outputDir</p><div class="language-gradle line-numbers-mode" data-highlighter="shiki" data-ext="gradle" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-gradle"><span class="line"><span></span></span>
<span class="line"><span>...</span></span>
<span class="line"><span></span></span>
<span class="line"><span>android.applicationVariants.all { variant -&gt;</span></span>
<span class="line"><span>    // delete previous files first</span></span>
<span class="line"><span>    def outputDir = &quot;\${buildDir}/intermediates/merged_assets/\${variant.dirName}/out&quot;</span></span>
<span class="line"><span>    delete &quot;\${outputDir}&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    variant.mergeAssets.doLast {</span></span>
<span class="line"><span>        def sourceDir = &quot;\${buildDir}/../../../../..&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        copy {</span></span>
<span class="line"><span>            from &quot;\${sourceDir}/res&quot;</span></span>
<span class="line"><span>            into &quot;\${outputDir}/res&quot;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        copy {</span></span>
<span class="line"><span>            from &quot;\${sourceDir}/subpackages&quot;</span></span>
<span class="line"><span>            into &quot;\${outputDir}/subpackages&quot;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        copy {</span></span>
<span class="line"><span>            from &quot;\${sourceDir}&quot;</span></span>
<span class="line"><span>            include &quot;assets/**&quot;</span></span>
<span class="line"><span>            include &quot;src/**&quot;</span></span>
<span class="line"><span>            include &quot;jsb-adapter/**&quot;</span></span>
<span class="line"><span>            into outputDir</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        copy {</span></span>
<span class="line"><span>            from &quot;\${sourceDir}/main.js&quot;</span></span>
<span class="line"><span>            from &quot;\${sourceDir}/project.json&quot;</span></span>
<span class="line"><span>            into outputDir</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ndk-编译" tabindex="-1"><a class="header-anchor" href="#ndk-编译"><span>NDK 编译</span></a></h3><p>NDK 升级后, module 不能带 shared 后缀了, 需要去掉.<br> 下面路径跟了两个, 那是因为<code>app/jni/Android.mk</code> 里引用了外层的 <code>CocosAndroid.mk</code> 文件, 所以最终是在 <code>CocosAndroid.mk</code> 中做的修改.<br> 但是如果 <code>app/jni/Android.mk</code> 没有包含外面的 mk , 而是直接实现的, 那么就应该在 <code>app/jni/Android.mk</code> 中修改.</p><p>路径: <code>proj.android-studio/app/jni/Android.mk</code>, <code>proj.android-studio/jni/CocosAndroid.mk</code></p><p>修改: module 名字中不用带 shared</p><div class="language-mk line-numbers-mode" data-highlighter="shiki" data-ext="mk" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-mk"><span class="line"><span>LOCAL_MODULE := cocos2djs   # 为升级作的修改</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><p>转自: <a href="http://www.hugohuang.xyz/" target="_blank" rel="noopener noreferrer">HH</a></p>`,16))])}const k=l(c,[["render",h]]),g=JSON.parse('{"path":"/posts/2021-06-07-cocos_android_project_upgrade.html","title":"Upgrade Cocos Creator Android project","lang":"zh-CN","frontmatter":{"title":"Upgrade Cocos Creator Android project","date":"2021-06-07T00:00:00.000Z","author":"hugo","tag":["creator","android"],"description":"前言 这里主要是介绍如果把 Cocos Creator 的 Andorid 导出工程的编译配置升级. 为什么 为什么要升级了, 默认导出不能用吗, 肯定是可以用的. 但是当你想在导出工程上集成一些第三方插件时, 它们必须要 android build tool 多少版本以上, 工程中必须要用 enable androidx, 那就必须要升级工程配置了....","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Upgrade Cocos Creator Android project\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-06-07T00:00:00.000Z\\",\\"dateModified\\":\\"2025-06-21T17:07:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"hugo\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/Blog/posts/2021-06-07-cocos_android_project_upgrade.html"}],["meta",{"property":"og:site_name","content":"HH"}],["meta",{"property":"og:title","content":"Upgrade Cocos Creator Android project"}],["meta",{"property":"og:description","content":"前言 这里主要是介绍如果把 Cocos Creator 的 Andorid 导出工程的编译配置升级. 为什么 为什么要升级了, 默认导出不能用吗, 肯定是可以用的. 但是当你想在导出工程上集成一些第三方插件时, 它们必须要 android build tool 多少版本以上, 工程中必须要用 enable androidx, 那就必须要升级工程配置了...."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-21T17:07:42.000Z"}],["meta",{"property":"article:author","content":"hugo"}],["meta",{"property":"article:tag","content":"android"}],["meta",{"property":"article:tag","content":"creator"}],["meta",{"property":"article:published_time","content":"2021-06-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-21T17:07:42.000Z"}]]},"git":{"createdTime":1750525662000,"updatedTime":1750525662000,"contributors":[{"name":"hugo","username":"hugo","email":"hugohuang1111@gmail.com","commits":1,"url":"https://github.com/hugo"}]},"readingTime":{"minutes":4.23,"words":1269},"filePathRelative":"posts/2021-06-07-cocos_android_project_upgrade.md","excerpt":"<h2>前言</h2>\\n<p>这里主要是介绍如果把 Cocos Creator 的 Andorid 导出工程的编译配置升级.</p>\\n<h2>为什么</h2>\\n<p>为什么要升级了, 默认导出不能用吗, 肯定是可以用的. 但是当你想在导出工程上集成一些第三方插件时, 它们必须要 android build tool 多少版本以上, 工程中必须要用 enable androidx, 那就必须要升级工程配置了.</p>\\n<h2>升级步骤</h2>\\n<p>以下以 Cocos Creator 2.4.5 的导出工程为准来依次给出步骤与方法.</p>\\n<ul>\\n<li>Cocos Creator 2.x 其它版本其实是差不多的, 基本可以直接套用</li>\\n<li>Cocos Creator 3.x 的导出工程结构有一个定的变化, 但是以下步骤中的文件内容都是有的, 只是路径不太一样, 实际修改不会变.</li>\\n</ul>","autoDesc":true}');export{k as comp,g as data};
