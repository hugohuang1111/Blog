import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as e,o as n}from"./app-CQ2TP62M.js";const t={};function h(l,s){return n(),a("div",null,s[0]||(s[0]=[e(`<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h2><p>今天尝试了下把 ShadowsockAndroid 工程自主编译打包, 走了很多弯路, 试了好久才成功. 最后回过头来看, 其实也很简单.</p><h2 id="前提条件" tabindex="-1"><a class="header-anchor" href="#前提条件"><span>前提条件</span></a></h2><ul><li>Android系统6.0+的手机(Android SDK &gt;= 23)</li><li>你的电脑已装好 Git 环境</li><li>你的电脑已装好 Rust 环境</li></ul><h2 id="步骤" tabindex="-1"><a class="header-anchor" href="#步骤"><span>步骤</span></a></h2><h3 id="检查-rust-环境" tabindex="-1"><a class="header-anchor" href="#检查-rust-环境"><span>检查 Rust 环境</span></a></h3><p>在命令行中运行 <code>rustup --version</code> , 应该能得到如下的提示</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rustup</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --version</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rustup</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1.24.3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (ce5817a94 </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">2021-05-31</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">info:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> This</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> is</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> version</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> for</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rustup</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> toolchain</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> manager,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> not</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rustc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> compiler.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">info:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> The</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> currently</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> active</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rustc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> version</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> is</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rustc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 1.54.0-nightly (dbe459ded 2021-06-02)\`</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="给-rust-配置国内镜像" tabindex="-1"><a class="header-anchor" href="#给-rust-配置国内镜像"><span>给 Rust 配置国内镜像</span></a></h3><ul><li>添加环境变量</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 中国科学技术大学</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">RUSTUP_DIST_SERVER</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">https://mirrors.ustc.edu.cn/rust-static</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">RUSTUP_UPDATE_ROOT</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">https://mirrors.ustc.edu.cn/rust-static/rustup</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将以上内容放到你的 <code>bash_profile</code> 中就可以了 (Windows 的话, 加到环境变量中就行)</p><ul><li>修改 cargo 的配置文件</li></ul><p>找到 <code>~/.cargo/config</code> 文件(如果没有, 就自己创建一个, 同理, 在 Windows 上就是相应的位置, 个人目录下的 <code>.cargo/config</code>), 加入以下内容</p><div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-yml"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">source.crates-io</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">replace-with = &#39;ustc&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 中国科学技术大学</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">source.ustc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">registry = &quot;git://mirrors.ustc.edu.cn/crates.io-index&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="更新-rust" tabindex="-1"><a class="header-anchor" href="#更新-rust"><span>更新 Rust</span></a></h3><p>这一步应该也不是必要, 根本实际情况, 自行判断吧<br> 命令行中运行如下命令:</p><p>更新 rustup 自身</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rustup</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> self</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>更新 rust</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rustup</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="clone-shadowsocks" tabindex="-1"><a class="header-anchor" href="#clone-shadowsocks"><span>Clone ShadowSocks</span></a></h3><p>克隆 ShadowSocks</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clone</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://github.com/shadowsocks/shadowsocks-android.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>仓库的依赖别忘了更新</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> shadowsocks-android</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> submodule</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --init</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --recursive</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="添加-rust-target" tabindex="-1"><a class="header-anchor" href="#添加-rust-target"><span>添加 rust target</span></a></h3><p>在 shadowsocks-rust 中添加target, 运行以下两个命令:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> core/src/main/rust/shadowsocks-rust</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rustup</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> target</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> armv7-linux-androideabi</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> aarch64-linux-android</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> i686-linux-android</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> x86_64-linux-android</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="编译-shadowsocks" tabindex="-1"><a class="header-anchor" href="#编译-shadowsocks"><span>编译 ShadowSocks</span></a></h3><p>用 Android Studio 打开工程 shadowsocks-android , 联接手机.</p><p>这里要注意一点, shadowsocks-android 需要 JDK 11.<br> 如果你的本机就是 JDK 11 , 那无事.<br> 如果你的电脑是其它版本, 那么你可以直接替换(重新安装)本机 JDK 为 11.<br> 同时还有一种方法, 在 Android Studio 中的工程设置中, 选择 Android Studio 中内置的 JDK 11.</p><p>直接开始编译吧.</p><p>理论上, 应该可以成功了.</p><hr><p>转自: <a href="http://www.hugohuang.xyz/" target="_blank" rel="noopener noreferrer">HH</a></p>`,37)]))}const p=i(t,[["render",h]]),k=JSON.parse('{"path":"/posts/2021-11-13-ss-android-compile.html","title":"ShadowsocksAndroid工程的编译打包","lang":"zh-CN","frontmatter":{"title":"ShadowsocksAndroid工程的编译打包","date":"2021-11-14T00:00:00.000Z","author":"hugo","tag":["shadowsocks"],"description":"前言 今天尝试了下把 ShadowsockAndroid 工程自主编译打包, 走了很多弯路, 试了好久才成功. 最后回过头来看, 其实也很简单. 前提条件 Android系统6.0+的手机(Android SDK >= 23) 你的电脑已装好 Git 环境 你的电脑已装好 Rust 环境 步骤 检查 Rust 环境 在命令行中运行 rustup --v...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ShadowsocksAndroid工程的编译打包\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-11-14T00:00:00.000Z\\",\\"dateModified\\":\\"2025-06-21T17:07:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"hugo\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/Blog/posts/2021-11-13-ss-android-compile.html"}],["meta",{"property":"og:site_name","content":"HH"}],["meta",{"property":"og:title","content":"ShadowsocksAndroid工程的编译打包"}],["meta",{"property":"og:description","content":"前言 今天尝试了下把 ShadowsockAndroid 工程自主编译打包, 走了很多弯路, 试了好久才成功. 最后回过头来看, 其实也很简单. 前提条件 Android系统6.0+的手机(Android SDK >= 23) 你的电脑已装好 Git 环境 你的电脑已装好 Rust 环境 步骤 检查 Rust 环境 在命令行中运行 rustup --v..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-21T17:07:42.000Z"}],["meta",{"property":"article:author","content":"hugo"}],["meta",{"property":"article:tag","content":"shadowsocks"}],["meta",{"property":"article:published_time","content":"2021-11-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-21T17:07:42.000Z"}]]},"git":{"createdTime":1750525662000,"updatedTime":1750525662000,"contributors":[{"name":"hugo","username":"hugo","email":"hugohuang1111@gmail.com","commits":1,"url":"https://github.com/hugo"}]},"readingTime":{"minutes":1.76,"words":529},"filePathRelative":"posts/2021-11-13-ss-android-compile.md","excerpt":"<h2>前言</h2>\\n<p>今天尝试了下把 ShadowsockAndroid 工程自主编译打包, 走了很多弯路, 试了好久才成功. 最后回过头来看, 其实也很简单.</p>\\n<h2>前提条件</h2>\\n<ul>\\n<li>Android系统6.0+的手机(Android SDK &gt;= 23)</li>\\n<li>你的电脑已装好 Git 环境</li>\\n<li>你的电脑已装好 Rust 环境</li>\\n</ul>\\n<h2>步骤</h2>\\n<h3>检查 Rust 环境</h3>\\n<p>在命令行中运行 <code>rustup --version</code> , 应该能得到如下的提示</p>","autoDesc":true}');export{p as comp,k as data};
