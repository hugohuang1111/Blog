import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,d as r,o as a}from"./app-CQ2TP62M.js";const n={};function i(p,t){return a(),o("div",null,t[0]||(t[0]=[r('<h2 id="betterbridge-脚本构思" tabindex="-1"><a class="header-anchor" href="#betterbridge-脚本构思"><span>BetterBridge 脚本构思</span></a></h2><p>最近在构思一个可以帮助开发者集成 iOS, Android 插件的项目.<br> 其中自动化集成部分, 一直在思考用什么比较好.</p><p>Python 好像是个不错的选择. 我做过的其它项目有使用到 Python , 实际中, 很多开发者没有 Python , 也分不清 Python 2.7 , Python 3.x 。</p><p>Golang 可以不分平台, 打出来的包, 也不需要依赖环境. 缺点也有，打出来的包大, Golang 主要是做网络服务, 用来做本地命令, 不确定合不合适, 同时对应的库可能也不多, 很多需要自己写. 但是打出来的包不依赖本地环境, 这一点对我的诱惑太大了，我想试一试.</p><h2 id="ios" tabindex="-1"><a class="header-anchor" href="#ios"><span>iOS</span></a></h2><p>iOS 我打算基于 cocoapod 来做, 主要是因为, iOS 上的插件集成, 基本用的就是 cocoapod , 站在巨人的肩上做很多事都会很方便</p><h2 id="android" tabindex="-1"><a class="header-anchor" href="#android"><span>Android</span></a></h2><p>Android 上对 jar 可以放在 maven 仓库, 但是我的插件会有 C++ 部分, 这里就有点麻烦了. 这个 C++ 部分是以源码的形式, 还是 so 库, 还是 .a 库,</p><ul><li>源码我其实还比较愿意的, 但是这样与 java 部分的交互, 怎么在工程中表现又是一个问题.</li><li>so库，可以比较好的集成到 gradle 工程中, 因为可以直接放在 aar 库里. 但是开发者就看不到源码，但是开发者还是要知道 so 的头文件, 开发者需要访问 so 库</li><li>.a 库, 这个我不太愿意做, 感觉没有前两个方式好, .a 库会参与开发者的编译，但又不是源码，其中可能会遇到各种问题.</li></ul><hr><p>转自: <a href="http://www.hugohuang.xyz/" target="_blank" rel="noopener noreferrer">HH</a></p>',11)]))}const c=e(n,[["render",i]]),l=JSON.parse('{"path":"/posts/2020-07-06-betterbridge_1.html","title":"betterbridge 脚本构思","lang":"zh-CN","frontmatter":{"title":"betterbridge 脚本构思","date":"2020-07-06T00:00:00.000Z","author":"hugo","tag":["golang","cocoapod"],"description":"BetterBridge 脚本构思 最近在构思一个可以帮助开发者集成 iOS, Android 插件的项目. 其中自动化集成部分, 一直在思考用什么比较好. Python 好像是个不错的选择. 我做过的其它项目有使用到 Python , 实际中, 很多开发者没有 Python , 也分不清 Python 2.7 , Python 3.x 。 Golan...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"betterbridge 脚本构思\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-07-06T00:00:00.000Z\\",\\"dateModified\\":\\"2025-06-21T17:07:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"hugo\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/Blog/posts/2020-07-06-betterbridge_1.html"}],["meta",{"property":"og:site_name","content":"HH"}],["meta",{"property":"og:title","content":"betterbridge 脚本构思"}],["meta",{"property":"og:description","content":"BetterBridge 脚本构思 最近在构思一个可以帮助开发者集成 iOS, Android 插件的项目. 其中自动化集成部分, 一直在思考用什么比较好. Python 好像是个不错的选择. 我做过的其它项目有使用到 Python , 实际中, 很多开发者没有 Python , 也分不清 Python 2.7 , Python 3.x 。 Golan..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-21T17:07:42.000Z"}],["meta",{"property":"article:author","content":"hugo"}],["meta",{"property":"article:tag","content":"cocoapod"}],["meta",{"property":"article:tag","content":"golang"}],["meta",{"property":"article:published_time","content":"2020-07-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-21T17:07:42.000Z"}]]},"git":{"createdTime":1750525662000,"updatedTime":1750525662000,"contributors":[{"name":"hugo","username":"hugo","email":"hugohuang1111@gmail.com","commits":1,"url":"https://github.com/hugo"}]},"readingTime":{"minutes":1.54,"words":462},"filePathRelative":"posts/2020-07-06-betterbridge_1.md","excerpt":"<h2>BetterBridge 脚本构思</h2>\\n<p>最近在构思一个可以帮助开发者集成 iOS, Android 插件的项目.<br>\\n其中自动化集成部分, 一直在思考用什么比较好.</p>\\n<p>Python 好像是个不错的选择. 我做过的其它项目有使用到 Python , 实际中, 很多开发者没有 Python , 也分不清 Python 2.7 , Python 3.x 。</p>\\n<p>Golang 可以不分平台, 打出来的包, 也不需要依赖环境. 缺点也有，打出来的包大, Golang 主要是做网络服务, 用来做本地命令, 不确定合不合适, 同时对应的库可能也不多, 很多需要自己写. 但是打出来的包不依赖本地环境, 这一点对我的诱惑太大了，我想试一试.</p>","autoDesc":true}');export{c as comp,l as data};
