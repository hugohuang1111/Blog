import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as r,o}from"./app-CQ2TP62M.js";const n="/Blog/assets/20200719/lottery_sample.gif",i={};function p(s,t){return o(),a("div",null,t[0]||(t[0]=[r('<h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p><strong>注意</strong>: 本文中的本仓库地址为 <a href="https://gitee.com/htl/wxLottery" target="_blank" rel="noopener noreferrer">https://gitee.com/htl/wxLottery</a></p><p>最近在微信小程序中实现如下这种抽奖效果.</p><figure><img src="'+n+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>由这个效果来看, 可以分成三个部分</p><ul><li>背景</li><li>转盘</li><li>抽奖按钮</li></ul><p>上面的实现有很多种方法, 很多大神也给出了这种效果的实现方式. 我自己来参照过大神的实现, 最后发现实际使用中，有些地方并不如意.</p><h2 id="实现" tabindex="-1"><a class="header-anchor" href="#实现"><span>实现</span></a></h2><p>上面三个部分每一种都有很多实现方式</p><ul><li>背景</li></ul><p>这是个背景是一个带有过度背景的圆, 再加边上有很多小圆. 这个其实并不难, 有很多实现方式.</p><p>本仓库中的 index 页面使用 css 实现, lottery 页面直接使用图片(lottery主要用来讲解一个更重要的问题，其它尽量简单，可以少点干扰)</p><ul><li>转盘</li></ul><p>转盘的扇形使用 canvas 来实现, 这应该没有问题. 转盘上的字, 可以直接用 canvas 来画, 也可以用 html 加 css 旋转效果来实现. 一般情况使用 html+css 可能在字体格式方面会更方便点.</p><p>本仓库中的 index 页面使用 html+css 来实现. lottery 使用 canvas 来画字.</p><ul><li>抽奖按钮</li></ul><p>这个按钮是不动的，可以用 html 实现.</p><h3 id="在小程序上的问题" tabindex="-1"><a class="header-anchor" href="#在小程序上的问题"><span>在小程序上的问题</span></a></h3><p>提出问题之前，先看一下这个<a href="https://developers.weixin.qq.com/community/develop/article/doc/000c4e433707c072c1793e56f5c813" target="_blank" rel="noopener noreferrer">文章</a>, 从中我们可以知道, 小程序中的 canvas 与 html 组件属于不同的层, z-index 无法控制 canvas 与 html 之间的深度关系. 当然文中还提到了&quot;同层渲染&quot;(将 canvas 渲染到 WebView 也就是与 html 同层) 和 cover-view , cover-image 来解决开发者想解决 canvas 与 html 的深度关系的问题, 实际我使用下来, 并不觉得好用, 有效.</p><p>好了，现在提出我在完成这个抽奖效果, 遇到的问题, 那就是我想在转盘上显示 html 的抽奖信息文字，与中间的抽奖按钮, 都遇到了 canvas 总是在最上层的问题.</p><h4 id="解决方案一" tabindex="-1"><a class="header-anchor" href="#解决方案一"><span>解决方案一</span></a></h4><p>我们知道小程序中的 canvas 接口有新旧两套接口. 本仓库中的 index 界面就是使用旧接口配合 z-index 来完成对应的实现</p><h4 id="解决方案二-推荐" tabindex="-1"><a class="header-anchor" href="#解决方案二-推荐"><span>解决方案二(推荐)</span></a></h4><p>使用 canvas 新接口生成图片, 然后所有的实现都可以使用 html 来实现, 这样适应性最强. 我觉得这是对应本效果最好的实现方式. 本仓库中的 lottery 界面对应就是这种实现。</p><hr><p>转自: <a href="http://www.hugohuang.xyz/" target="_blank" rel="noopener noreferrer">HH</a></p>',26)]))}const h=e(i,[["render",p]]),m=JSON.parse('{"path":"/posts/2020-07-19-miniprogram-lottery.html","title":"小程序抽奖实现","lang":"zh-CN","frontmatter":{"title":"小程序抽奖实现","date":"2020-07-19T00:00:00.000Z","author":"hugo","tag":["小程序","canvas"],"description":"介绍 注意: 本文中的本仓库地址为 https://gitee.com/htl/wxLottery 最近在微信小程序中实现如下这种抽奖效果. 由这个效果来看, 可以分成三个部分 背景 转盘 抽奖按钮 上面的实现有很多种方法, 很多大神也给出了这种效果的实现方式. 我自己来参照过大神的实现, 最后发现实际使用中，有些地方并不如意. 实现 上面三个部分每一...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"小程序抽奖实现\\",\\"image\\":[\\"https://mister-hope.github.io/Blog/assets/20200719/lottery_sample.gif\\"],\\"datePublished\\":\\"2020-07-19T00:00:00.000Z\\",\\"dateModified\\":\\"2025-06-21T17:07:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"hugo\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/Blog/posts/2020-07-19-miniprogram-lottery.html"}],["meta",{"property":"og:site_name","content":"HH"}],["meta",{"property":"og:title","content":"小程序抽奖实现"}],["meta",{"property":"og:description","content":"介绍 注意: 本文中的本仓库地址为 https://gitee.com/htl/wxLottery 最近在微信小程序中实现如下这种抽奖效果. 由这个效果来看, 可以分成三个部分 背景 转盘 抽奖按钮 上面的实现有很多种方法, 很多大神也给出了这种效果的实现方式. 我自己来参照过大神的实现, 最后发现实际使用中，有些地方并不如意. 实现 上面三个部分每一..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/Blog/assets/20200719/lottery_sample.gif"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-21T17:07:42.000Z"}],["meta",{"property":"article:author","content":"hugo"}],["meta",{"property":"article:tag","content":"canvas"}],["meta",{"property":"article:tag","content":"小程序"}],["meta",{"property":"article:published_time","content":"2020-07-19T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-21T17:07:42.000Z"}]]},"git":{"createdTime":1750525662000,"updatedTime":1750525662000,"contributors":[{"name":"hugo","username":"hugo","email":"hugohuang1111@gmail.com","commits":1,"url":"https://github.com/hugo"}]},"readingTime":{"minutes":2.31,"words":692},"filePathRelative":"posts/2020-07-19-miniprogram-lottery.md","excerpt":"<h2>介绍</h2>\\n<p><strong>注意</strong>: 本文中的本仓库地址为 <a href=\\"https://gitee.com/htl/wxLottery\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://gitee.com/htl/wxLottery</a></p>\\n<p>最近在微信小程序中实现如下这种抽奖效果.</p>\\n<figure><img src=\\"/assets/20200719/lottery_sample.gif\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>","autoDesc":true}');export{h as comp,m as data};
