import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,d as i,o as e}from"./app-CQ2TP62M.js";const l={};function p(r,s){return e(),n("div",null,s[0]||(s[0]=[i(`<p>gradle 下载慢完美解决方法.</p><h2 id="添加镜像" tabindex="-1"><a class="header-anchor" href="#添加镜像"><span>添加镜像</span></a></h2><p>gradle 的镜像下载, 在网上很多都会搜到在工程的 build.gradle 中加入对应镜像的 url,<br> 这里以阿里云为例.</p><div class="language-gradle line-numbers-mode" data-highlighter="shiki" data-ext="gradle" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-gradle"><span class="line"><span>buildscript {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    repositories {</span></span>
<span class="line"><span>        maven { url &#39;https://maven.aliyun.com/repository/gradle-plugin&#39; } // 阿里云国内镜像</span></span>
<span class="line"><span>        maven { url &#39;https://maven.aliyun.com/repository/google&#39; } // 阿里云国内镜像</span></span>
<span class="line"><span>        maven { url &#39;https://maven.aliyun.com/repository/public&#39; } // 阿里云国内镜像</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        google()</span></span>
<span class="line"><span>        jcenter()</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>allprojects {</span></span>
<span class="line"><span>    repositories {</span></span>
<span class="line"><span>        maven { url &#39;https://maven.aliyun.com/repository/gradle-plugin&#39; } // 阿里云国内镜像</span></span>
<span class="line"><span>        maven { url &#39;https://maven.aliyun.com/repository/google&#39; } // 阿里云国内镜像</span></span>
<span class="line"><span>        maven { url &#39;https://maven.aliyun.com/repository/public&#39; } // 阿里云国内镜像</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        google()</span></span>
<span class="line"><span>        jcenter()</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>只要添加上面三项, gradle, google, jcenter中的插件下载都会比较快了.</p><p>这里阿里云相关镜像的介绍: <a href="https://maven.aliyun.com/mvn/guide" target="_blank" rel="noopener noreferrer">https://maven.aliyun.com/mvn/guide</a></p><h2 id="gradle-下载" tabindex="-1"><a class="header-anchor" href="#gradle-下载"><span>gradle 下载</span></a></h2><p>但是还是会遇到下载 <code>gradle-x.x.x-all.zip</code> 非常慢的问题, 那么这时将 <code>gradle/wrapper/gradle-wrapper.properties</code> 中的地址也定位到国内镜像就可以了.</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-properties"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#distributionUrl=https\\://services.gradle.org/distributions/gradle-4.10.3-all.zip</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">distributionUrl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">https\\://mirrors.cloud.tencent.com/gradle/gradle-4.10.3-all.zip</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>如上, 将 <code>gradle-4.10.3-all.zip</code> 定向到了 tencent , 下载就非常快了.<br> 如下中的版本, 应该根据你自身的版本作对应修改.</p><h2 id="gradle-全局代理" tabindex="-1"><a class="header-anchor" href="#gradle-全局代理"><span>gradle 全局代理</span></a></h2><p>在 gradle 编译中, 有时还会遇到这种情况<br> 既使已经配置了上面的镜像, 还是会遇到类似 <code>Unable to load Maven meta-data from https://maven.google.com/</code> 这样的错.</p><p>这时可能就是你依赖的插件依赖了 google maven , 而这时因某些原因, 这里的 google maven 不能使用上面你配置的镜像.</p><p>那么就需要添加一个全局的 gradle 代理配置:<br> 在 <code>~/.gradle/gradle.properties</code> (Windows上也是类似的位置) 添加如下内容</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-properties"><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">systemProp.http.proxyHost</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">127.0.0.1</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">systemProp.http.proxyPort</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">7890</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># systemProp.http.proxyUser=userid</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># systemProp.http.proxyPassword=password</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">systemProp.http.nonProxyHosts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">*.nonproxyrepos.com|localhost</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">systemProp.https.proxyHost</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">127.0.0.1</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">systemProp.https.proxyPort</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">7890</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># systemProp.https.proxyUser=userid</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># systemProp.https.proxyPassword=password</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">systemProp.https.nonProxyHosts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">*.nonproxyrepos.com|localhost</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上文中的 proxy, port 应该是用你自己的信息.<br> 当然你也可以把 gradle.properties 放在你的工程下, 这样只在当前工程有效.</p><hr><p>转自: <a href="http://www.hugohuang.xyz/" target="_blank" rel="noopener noreferrer">HH</a></p>`,18)]))}const o=a(l,[["render",p]]),c=JSON.parse(`{"path":"/posts/2021-03-16-gradle_mirrors.html","title":"gradle 镜像","lang":"zh-CN","frontmatter":{"title":"gradle 镜像","date":"2021-03-16T00:00:00.000Z","author":"hugo","tag":["gradle","android-studio","mirrors"],"description":"gradle 下载慢完美解决方法. 添加镜像 gradle 的镜像下载, 在网上很多都会搜到在工程的 build.gradle 中加入对应镜像的 url, 这里以阿里云为例. 只要添加上面三项, gradle, google, jcenter中的插件下载都会比较快了. 这里阿里云相关镜像的介绍: https://maven.aliyun.com/mvn...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"gradle 镜像\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-03-16T00:00:00.000Z\\",\\"dateModified\\":\\"2025-06-21T17:07:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"hugo\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/Blog/posts/2021-03-16-gradle_mirrors.html"}],["meta",{"property":"og:site_name","content":"HH"}],["meta",{"property":"og:title","content":"gradle 镜像"}],["meta",{"property":"og:description","content":"gradle 下载慢完美解决方法. 添加镜像 gradle 的镜像下载, 在网上很多都会搜到在工程的 build.gradle 中加入对应镜像的 url, 这里以阿里云为例. 只要添加上面三项, gradle, google, jcenter中的插件下载都会比较快了. 这里阿里云相关镜像的介绍: https://maven.aliyun.com/mvn..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-21T17:07:42.000Z"}],["meta",{"property":"article:author","content":"hugo"}],["meta",{"property":"article:tag","content":"mirrors"}],["meta",{"property":"article:tag","content":"android-studio"}],["meta",{"property":"article:tag","content":"gradle"}],["meta",{"property":"article:published_time","content":"2021-03-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-21T17:07:42.000Z"}]]},"git":{"createdTime":1750525662000,"updatedTime":1750525662000,"contributors":[{"name":"hugo","username":"hugo","email":"hugohuang1111@gmail.com","commits":1,"url":"https://github.com/hugo"}]},"readingTime":{"minutes":1.62,"words":487},"filePathRelative":"posts/2021-03-16-gradle_mirrors.md","excerpt":"<p>gradle 下载慢完美解决方法.</p>\\n<h2>添加镜像</h2>\\n<p>gradle 的镜像下载, 在网上很多都会搜到在工程的 build.gradle 中加入对应镜像的 url,<br>\\n这里以阿里云为例.</p>\\n<div class=\\"language-gradle line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"gradle\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code class=\\"language-gradle\\"><span class=\\"line\\"><span>buildscript {</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>    repositories {</span></span>\\n<span class=\\"line\\"><span>        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' } // 阿里云国内镜像</span></span>\\n<span class=\\"line\\"><span>        maven { url 'https://maven.aliyun.com/repository/google' } // 阿里云国内镜像</span></span>\\n<span class=\\"line\\"><span>        maven { url 'https://maven.aliyun.com/repository/public' } // 阿里云国内镜像</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>        google()</span></span>\\n<span class=\\"line\\"><span>        jcenter()</span></span>\\n<span class=\\"line\\"><span>    }</span></span>\\n<span class=\\"line\\"><span>}</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>allprojects {</span></span>\\n<span class=\\"line\\"><span>    repositories {</span></span>\\n<span class=\\"line\\"><span>        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' } // 阿里云国内镜像</span></span>\\n<span class=\\"line\\"><span>        maven { url 'https://maven.aliyun.com/repository/google' } // 阿里云国内镜像</span></span>\\n<span class=\\"line\\"><span>        maven { url 'https://maven.aliyun.com/repository/public' } // 阿里云国内镜像</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>        google()</span></span>\\n<span class=\\"line\\"><span>        jcenter()</span></span>\\n<span class=\\"line\\"><span>    }</span></span>\\n<span class=\\"line\\"><span>}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{o as comp,c as data};
