import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as e,o as t}from"./app-CQ2TP62M.js";const l="/Blog/assets/202110/dissolve1.gif",h="/Blog/assets/202110/dissolve2.gif",n="/Blog/assets/202110/dissolve3.gif",r={};function p(k,s){return t(),a("div",null,s[0]||(s[0]=[e('<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>前几天看到一个消融(Dissolve)特效, 就想自己也尝试一下.</p><h2 id="效果与思路" tabindex="-1"><a class="header-anchor" href="#效果与思路"><span>效果与思路</span></a></h2><p>老规矩, 先上效果图</p><figure><img src="'+l+'" alt="Dissolve" tabindex="0" loading="lazy"><figcaption>Dissolve</figcaption></figure><p>另一种效果, 最后带点飞升的感觉</p><figure><img src="'+h+'" alt="Dissolve" tabindex="0" loading="lazy"><figcaption>Dissolve</figcaption></figure><p>这个最后扩展一点, 有点膨胀消失的感觉</p><figure><img src="'+n+`" alt="Dissolve" tabindex="0" loading="lazy"><figcaption>Dissolve</figcaption></figure><p>消融其实就是用一张 noise 的图, 然后以 noise 像素点的一个分量与消融阀值作比较, noise 小于阀值的, 那么对应的模型纹理就直接 discard ,随着消融阀值地不断提升, 模型就慢慢整个消失了.</p><p>最后飞升(整体上移),膨胀(模型外扩), 其实就是在要完全消失时, 再去操作模型坐标.</p><h2 id="实现步骤简述" tabindex="-1"><a class="header-anchor" href="#实现步骤简述"><span>实现步骤简述</span></a></h2><ol><li>以 noise map 为点, 将小于消融阀值的像素丢掉</li></ol><div class="language-glsl line-numbers-mode" data-highlighter="shiki" data-ext="glsl" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-glsl"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">vec4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> dissval </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> texture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">dissolveMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> v_uv</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (dissval.r </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> dissthreshold) { discard; }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>在消融值的边缘加上过渡色</li></ol><div class="language-glsl line-numbers-mode" data-highlighter="shiki" data-ext="glsl" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-glsl"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> t </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> -</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> smoothstep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, dissolveParams.y, dissval.r </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> dissthreshold);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">s.albedo </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> mix</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(s.albedo, dissolveColor, t </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> step</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.001</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> dissthreshold</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">));</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>在逻辑代码中加不断增加消融的阀值</li></ol><p>随时间增加 value , 并将其通过 pass 传到 shader 中.</p><div class="language-typescript line-numbers-mode" data-highlighter="shiki" data-ext="typescript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-typescript"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">pass</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setUniform</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dissolveThresholdHandle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="4"><li>如果要做飞升</li></ol><p>dissolveOffsetDir 设置为 (0, 1, 0), 代入下面的代码中, 就会在完全消失前, 整体往上 (0, 1, 0) 的方向移动了</p><div class="language-glsl line-numbers-mode" data-highlighter="shiki" data-ext="glsl" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-glsl"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">vec3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> offsetDir </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> dissolveOffsetDir.xyz </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> saturate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">dissolveParams.x </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> dissolveParams.w</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> dissolveParams.z;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="5"><li>如果要做扩展</li></ol><p>扩展一般都是按法线往外移动一段距离</p><div class="language-glsl line-numbers-mode" data-highlighter="shiki" data-ext="glsl" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-glsl"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">vec3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> normalDir </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> In.normal </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> saturate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">dissolveParams.x </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> dissolveParams.w</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> dissolveParams.z;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="详细实现" tabindex="-1"><a class="header-anchor" href="#详细实现"><span>详细实现</span></a></h2><p><a href="https://github.com/hugohuang1111/fxcase/tree/master/assets/caseDissolve" target="_blank" rel="noopener noreferrer">https://github.com/hugohuang1111/fxcase/tree/master/assets/caseDissolve</a></p><hr><p>转自: <a href="http://www.hugohuang.xyz/" target="_blank" rel="noopener noreferrer">HH</a></p>`,29)]))}const g=i(r,[["render",p]]),c=JSON.parse('{"path":"/posts/2021-10-14-dissolve-effect.html","title":"Dissolve 消融特效","lang":"zh-CN","frontmatter":{"title":"Dissolve 消融特效","date":"2021-10-14T00:00:00.000Z","author":"hugo","tag":["effect"],"description":"简介 前几天看到一个消融(Dissolve)特效, 就想自己也尝试一下. 效果与思路 老规矩, 先上效果图 DissolveDissolve 另一种效果, 最后带点飞升的感觉 DissolveDissolve 这个最后扩展一点, 有点膨胀消失的感觉 DissolveDissolve 消融其实就是用一张 noise 的图, 然后以 noise 像素点的一...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Dissolve 消融特效\\",\\"image\\":[\\"https://mister-hope.github.io/Blog/assets/202110/dissolve1.gif\\",\\"https://mister-hope.github.io/Blog/assets/202110/dissolve2.gif\\",\\"https://mister-hope.github.io/Blog/assets/202110/dissolve3.gif\\"],\\"datePublished\\":\\"2021-10-14T00:00:00.000Z\\",\\"dateModified\\":\\"2025-06-21T17:07:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"hugo\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/Blog/posts/2021-10-14-dissolve-effect.html"}],["meta",{"property":"og:site_name","content":"HH"}],["meta",{"property":"og:title","content":"Dissolve 消融特效"}],["meta",{"property":"og:description","content":"简介 前几天看到一个消融(Dissolve)特效, 就想自己也尝试一下. 效果与思路 老规矩, 先上效果图 DissolveDissolve 另一种效果, 最后带点飞升的感觉 DissolveDissolve 这个最后扩展一点, 有点膨胀消失的感觉 DissolveDissolve 消融其实就是用一张 noise 的图, 然后以 noise 像素点的一..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/Blog/assets/202110/dissolve1.gif"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-21T17:07:42.000Z"}],["meta",{"property":"article:author","content":"hugo"}],["meta",{"property":"article:tag","content":"effect"}],["meta",{"property":"article:published_time","content":"2021-10-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-21T17:07:42.000Z"}]]},"git":{"createdTime":1750525662000,"updatedTime":1750525662000,"contributors":[{"name":"hugo","username":"hugo","email":"hugohuang1111@gmail.com","commits":1,"url":"https://github.com/hugo"}]},"readingTime":{"minutes":1.3,"words":391},"filePathRelative":"posts/2021-10-14-dissolve-effect.md","excerpt":"<h2>简介</h2>\\n<p>前几天看到一个消融(Dissolve)特效, 就想自己也尝试一下.</p>\\n<h2>效果与思路</h2>\\n<p>老规矩, 先上效果图</p>\\n<figure><img src=\\"/assets/202110/dissolve1.gif\\" alt=\\"Dissolve\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>Dissolve</figcaption></figure>\\n<p>另一种效果, 最后带点飞升的感觉</p>\\n<figure><img src=\\"/assets/202110/dissolve2.gif\\" alt=\\"Dissolve\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>Dissolve</figcaption></figure>","autoDesc":true}');export{g as comp,c as data};
