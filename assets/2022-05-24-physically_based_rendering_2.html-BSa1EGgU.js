import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as h,o as n}from"./app-CQ2TP62M.js";const l={};function t(k,s){return n(),a("div",null,s[0]||(s[0]=[h(`<h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景"><span>背景</span></a></h2><p>上一篇说到我最近开了一个<a href="https://gitee.com/hugohuang1111/ben" target="_blank" rel="noopener noreferrer">引擎</a>的坑写了, 所以把自己关于 PBR 的一点体会记录下来, 前篇写了 PBR 的光照部分, 其实 PBR 还有一个特别重要的部分, 那就是 IBL(Image Base Lighting).</p><h2 id="ibl-是什么" tabindex="-1"><a class="header-anchor" href="#ibl-是什么"><span>IBL 是什么</span></a></h2><p>IBL 主要作用就是模拟我们现实生活中的间接光反射. 想像我们把一个白球放在四面墙壁是红色的屋里, 我们去观察这个白球, 它会有浅浅的红色, 这就是因为球受到红色墙壁的影响. 同理, 如果我们把球放在四面墙壁是绿色的房间, 那球就是呈现浅浅的绿色.</p><p>物体最终会呈现出什么颜色, 其实与物体所处的环境相关.</p><h2 id="ibl-理论" tabindex="-1"><a class="header-anchor" href="#ibl-理论"><span>IBL 理论</span></a></h2><p>IBL(Image Base Lighting) 也就是基于图像的光照. 这里的图像就是物体所处的环境. 一般情况下我们会用一个 Cube 纹理来表示. 这个 Cube 怎么来, 可以是天空盒, 也可以是物体所处的环境的实时渲染结果(光照探针就是一种类似的技术).</p><p>IBL 也分为漫反射与镜面反射, 而 IBL 中光线来辐射量应该是来源于法线平面所有的像素点, 而计算机中不可能取到现实中所有的光源, 所以我们其实是采样法线半球内的像素点作为光源. 而因为采样的成本很高, 所以我们都会预处理, 先将平面四周的环境全采样后存储到一个 Cube 纹理中, 在 IBL 中, 再直接采用.</p><h2 id="ibl-实现" tabindex="-1"><a class="header-anchor" href="#ibl-实现"><span>IBL 实现</span></a></h2><h3 id="漫反射" tabindex="-1"><a class="header-anchor" href="#漫反射"><span>漫反射</span></a></h3><p>环境漫反射是说, 当前点的平面法线所在的半球应该都会对当前点的有辐射, 而我们在计算机, 在每一帧中的每一个点都要去采样当前点的法线半球, 这在性能上几乎不可接受, 所以我们需要做一个预处理, 预先将每个点的所能接收到的环境辐射存储到一个 Cube 纹理中. 这样在实时计算时, 只需要从这个 Cube 纹理中直接取值就好, 而这个 Cube 纹理, 我们一般叫作环境辐射图.</p><p>生成辐射图的 glsl</p><div class="language-glsl line-numbers-mode" data-highlighter="shiki" data-ext="glsl" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-glsl"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> sampleDelta </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0.025</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> nrSamples </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0.0</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> phi </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; phi </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2.0</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> *</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> PI; phi </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">+=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> sampleDelta) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> theta </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; theta </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0.5</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> *</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> PI; theta </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">+=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> sampleDelta) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // spherical to cartesian (in tangent space)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        vec3 tangentSample </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> vec3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(theta) </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> cos</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(phi),  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(theta) </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> sin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(phi), </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cos</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(theta));</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // tangent space to world</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        vec3 sampleVec </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> tangentSample</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">x</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> *</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> right </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> tangentSample</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">y</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> *</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> up </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> tangentSample</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">z</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> *</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> N;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        irradiance </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">+=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> texture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(environmentMap, sampleVec).</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">rgb</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> *</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> cos</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(theta) </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> sin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(theta);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        nrSamples</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">irradiance </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> PI </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> irradiance </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> /</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(nrSamples));</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面这个 shader 其实就是用两个 for 循环在当前点的法线半球上采样, 然后取平均.</p><p>有了上面实时生成的辐照图, 我们在实时实现物体的实时漫反射光源, 就可以直接从辐照图中获取了.</p><div class="language-glsl line-numbers-mode" data-highlighter="shiki" data-ext="glsl" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-glsl"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">vec3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> irradiance </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> texture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">irradianceMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> N</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).rgb;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">vec3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> diffuse    </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> irradiance </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> albedo;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="镜面反射" tabindex="-1"><a class="header-anchor" href="#镜面反射"><span>镜面反射</span></a></h3><p>光线在一个点发生反射, 因为微平面与粗糙度这两个概念, 反射出来的光线不会只有一条, 而是以完全镜面反射 r 为中心主要反射的扇瓣形. 同时, 粗糙度的不同也会导致扇瓣大小的不同. 所以我们会生成一个预滤波的环境图, 并以粗糙度为准生成 lod 纹理.</p><p>再加上我们生成的以 NdotV 和粗糙度为轴的 LUT , 就可以得到 Fresnel 值.</p><p>至此, 高光的相关元素, 我们都集齐了.</p><div class="language-glsl line-numbers-mode" data-highlighter="shiki" data-ext="glsl" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-glsl"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">vec3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> F </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> fresnelSchlickRoughness</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">max</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">dot</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">N</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> V</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> F0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> roughness</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">F </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> vec3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">vec3</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> kS</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> F;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">vec3</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> kD</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> vec3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> kS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">kD</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> *=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> -</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> metallic;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">vec3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> irradiance </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> texture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">irradianceMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> N</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).rgb;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">vec3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> diffuse    </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> irradiance </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> albedo;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// sample both the pre-filter map and the BRDF lut and combine them together as per the Split-Sum approximation to get the IBL specular part.</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> MAX_REFLECTION_LOD </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">vec3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> prefilteredColor </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> textureLod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">prefilterMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> R</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  roughness </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> MAX_REFLECTION_LOD</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).rgb;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">vec2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> brdf  </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> texture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">LUTMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> vec2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">max</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">dot</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">N</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> V</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> roughness</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)).rg;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">vec3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> specular </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> prefilteredColor </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (F </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> brdf.x </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> brdf.y);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">vec3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ambient </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">kD</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> *</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> diffuse </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> specular) </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ao;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>更详细的理论可以参考<a href="https://learnopengl-cn.github.io/07%20PBR/03%20IBL/02%20Specular%20IBL/" target="_blank" rel="noopener noreferrer">这里</a></p><hr><p>转自: <a href="http://www.hugohuang.xyz/" target="_blank" rel="noopener noreferrer">HH</a></p>`,24)]))}const r=i(l,[["render",t]]),d=JSON.parse('{"path":"/posts/2022-05-24-physically_based_rendering_2.html","title":"Physically Based Rendering-Image Base Lighting","lang":"zh-CN","frontmatter":{"title":"Physically Based Rendering-Image Base Lighting","date":"2022-05-24T00:00:00.000Z","author":"hugo","tag":["pbr"],"description":"背景 上一篇说到我最近开了一个引擎的坑写了, 所以把自己关于 PBR 的一点体会记录下来, 前篇写了 PBR 的光照部分, 其实 PBR 还有一个特别重要的部分, 那就是 IBL(Image Base Lighting). IBL 是什么 IBL 主要作用就是模拟我们现实生活中的间接光反射. 想像我们把一个白球放在四面墙壁是红色的屋里, 我们去观察这个...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Physically Based Rendering-Image Base Lighting\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-05-24T00:00:00.000Z\\",\\"dateModified\\":\\"2025-06-21T17:07:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"hugo\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/Blog/posts/2022-05-24-physically_based_rendering_2.html"}],["meta",{"property":"og:site_name","content":"HH"}],["meta",{"property":"og:title","content":"Physically Based Rendering-Image Base Lighting"}],["meta",{"property":"og:description","content":"背景 上一篇说到我最近开了一个引擎的坑写了, 所以把自己关于 PBR 的一点体会记录下来, 前篇写了 PBR 的光照部分, 其实 PBR 还有一个特别重要的部分, 那就是 IBL(Image Base Lighting). IBL 是什么 IBL 主要作用就是模拟我们现实生活中的间接光反射. 想像我们把一个白球放在四面墙壁是红色的屋里, 我们去观察这个..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-21T17:07:42.000Z"}],["meta",{"property":"article:author","content":"hugo"}],["meta",{"property":"article:tag","content":"pbr"}],["meta",{"property":"article:published_time","content":"2022-05-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-21T17:07:42.000Z"}]]},"git":{"createdTime":1750525662000,"updatedTime":1750525662000,"contributors":[{"name":"hugo","username":"hugo","email":"hugohuang1111@gmail.com","commits":1,"url":"https://github.com/hugo"}]},"readingTime":{"minutes":3.51,"words":1052},"filePathRelative":"posts/2022-05-24-physically_based_rendering_2.md","excerpt":"<h2>背景</h2>\\n<p>上一篇说到我最近开了一个<a href=\\"https://gitee.com/hugohuang1111/ben\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">引擎</a>的坑写了, 所以把自己关于 PBR 的一点体会记录下来, 前篇写了 PBR 的光照部分, 其实 PBR 还有一个特别重要的部分, 那就是 IBL(Image Base Lighting).</p>\\n<h2>IBL 是什么</h2>\\n<p>IBL 主要作用就是模拟我们现实生活中的间接光反射. 想像我们把一个白球放在四面墙壁是红色的屋里, 我们去观察这个白球, 它会有浅浅的红色, 这就是因为球受到红色墙壁的影响. 同理, 如果我们把球放在四面墙壁是绿色的房间, 那球就是呈现浅浅的绿色.</p>","autoDesc":true}');export{r as comp,d as data};
