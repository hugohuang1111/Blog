import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,d as l,o as a}from"./app-CQ2TP62M.js";const o={};function r(p,e){return a(),i("div",null,e[0]||(e[0]=[l('<h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景"><span>背景</span></a></h2><p>最近在研究 FFMPEG , 就记录了相关知识点.</p><h2 id="ffmpeg-的几个基本库" tabindex="-1"><a class="header-anchor" href="#ffmpeg-的几个基本库"><span>FFMPEG 的几个基本库</span></a></h2><ul><li>libavformat: 用于各种音视频封装格式的生成和解析，包括获取解码所需信息以生成解码上下文结构和读取音视频帧等功能；音视频的格式解析协议，为 libavcodec 分析码流提供独立的音频或视频码流源.</li><li>libavcodec: 用于各种类型声音/图像编解码。该库是音视频编解码核心，实现了市面上可见的绝大部分解码器的功能， libavcodec 库被其他各大解码器 ffdshow， Mplayer 等所包含或应用.</li><li>libavdevice: 硬件采集, 加速, 显示. 操作计算机中常用的音视频捕获或输出设备: ALSA, AUDIO_BEOS, JACK, OSS,1394, VFW.</li><li>libavfilter: filter（FileIO、 FPS、 DrawText） 音视频滤波器的开发，如宽高比 裁剪 格式化 非格式化 伸缩.</li><li>libavutil: 包含一些公共的工具函数的使用库，包括算数运算 字符操作.</li><li>libswscale: (原始视频格式转换) 用于视频场景比例缩放、色彩映射转换；图像颜色空间或格式转换，如 rgb565、rgb888 等与 yuv420 等之间转换.</li><li>libswresample: 音频采样数据格式转换.</li><li>libpostproc: (同步、时间计算的简单算法) 用于后期效果处理; 音视频应用的后处理，如图像的去块效应.</li></ul><h2 id="ffmpeg-的几个工具" tabindex="-1"><a class="header-anchor" href="#ffmpeg-的几个工具"><span>FFMPEG 的几个工具</span></a></h2><ul><li>ffmpeg: 该项目提供的一个工具, 可用于格式转换, 解码或电视卡即时编码等.</li><li>ffprobe: 获取媒体文件信息.</li><li>ffplay: 是一个简单的播放器, 使用 ffmpeg 库解析和解码, 通过 SDL 显示.</li></ul><hr><p>转自: <a href="http://www.hugohuang.xyz/" target="_blank" rel="noopener noreferrer">HH</a></p>',8)]))}const s=t(o,[["render",r]]),m=JSON.parse('{"path":"/posts/2022-06-15-ffmpeg_description.html","title":"FFMPEG 介绍","lang":"zh-CN","frontmatter":{"title":"FFMPEG 介绍","date":"2022-06-15T00:00:00.000Z","author":"hugo","tag":["ffmpeg"],"description":"背景 最近在研究 FFMPEG , 就记录了相关知识点. FFMPEG 的几个基本库 libavformat: 用于各种音视频封装格式的生成和解析，包括获取解码所需信息以生成解码上下文结构和读取音视频帧等功能；音视频的格式解析协议，为 libavcodec 分析码流提供独立的音频或视频码流源. libavcodec: 用于各种类型声音/图像编解码。该库...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"FFMPEG 介绍\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-06-15T00:00:00.000Z\\",\\"dateModified\\":\\"2025-06-21T17:07:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"hugo\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/Blog/posts/2022-06-15-ffmpeg_description.html"}],["meta",{"property":"og:site_name","content":"HH"}],["meta",{"property":"og:title","content":"FFMPEG 介绍"}],["meta",{"property":"og:description","content":"背景 最近在研究 FFMPEG , 就记录了相关知识点. FFMPEG 的几个基本库 libavformat: 用于各种音视频封装格式的生成和解析，包括获取解码所需信息以生成解码上下文结构和读取音视频帧等功能；音视频的格式解析协议，为 libavcodec 分析码流提供独立的音频或视频码流源. libavcodec: 用于各种类型声音/图像编解码。该库..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-21T17:07:42.000Z"}],["meta",{"property":"article:author","content":"hugo"}],["meta",{"property":"article:tag","content":"ffmpeg"}],["meta",{"property":"article:published_time","content":"2022-06-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-21T17:07:42.000Z"}]]},"git":{"createdTime":1750525662000,"updatedTime":1750525662000,"contributors":[{"name":"hugo","username":"hugo","email":"hugohuang1111@gmail.com","commits":1,"url":"https://github.com/hugo"}]},"readingTime":{"minutes":1.49,"words":446},"filePathRelative":"posts/2022-06-15-ffmpeg_description.md","excerpt":"<h2>背景</h2>\\n<p>最近在研究 FFMPEG , 就记录了相关知识点.</p>\\n<h2>FFMPEG 的几个基本库</h2>\\n<ul>\\n<li>libavformat: 用于各种音视频封装格式的生成和解析，包括获取解码所需信息以生成解码上下文结构和读取音视频帧等功能；音视频的格式解析协议，为 libavcodec 分析码流提供独立的音频或视频码流源.</li>\\n<li>libavcodec: 用于各种类型声音/图像编解码。该库是音视频编解码核心，实现了市面上可见的绝大部分解码器的功能， libavcodec 库被其他各大解码器 ffdshow， Mplayer 等所包含或应用.</li>\\n<li>libavdevice: 硬件采集, 加速, 显示. 操作计算机中常用的音视频捕获或输出设备: ALSA, AUDIO_BEOS, JACK, OSS,1394, VFW.</li>\\n<li>libavfilter: filter（FileIO、 FPS、 DrawText） 音视频滤波器的开发，如宽高比 裁剪 格式化 非格式化 伸缩.</li>\\n<li>libavutil: 包含一些公共的工具函数的使用库，包括算数运算 字符操作.</li>\\n<li>libswscale: (原始视频格式转换) 用于视频场景比例缩放、色彩映射转换；图像颜色空间或格式转换，如 rgb565、rgb888 等与 yuv420 等之间转换.</li>\\n<li>libswresample: 音频采样数据格式转换.</li>\\n<li>libpostproc: (同步、时间计算的简单算法) 用于后期效果处理; 音视频应用的后处理，如图像的去块效应.</li>\\n</ul>","autoDesc":true}');export{s as comp,m as data};
